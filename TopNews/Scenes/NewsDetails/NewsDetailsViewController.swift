//
//  NewsDetailsViewController.swift
//  TopNews
//
//  Created by Sujata Chakraborty on 11/10/2019.
//  Copyright (c) 2019 Sujata Chakraborty. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit

protocol NewsDetailsDisplayLogic: class
{
    /**
     Use this function to get url and title to load the news
     
     */
    func displayNewsDetails(viewModel: NewsDetails.FetchNewsDetails.ViewModel)
    func displayError()
    
}

class NewsDetailsViewController: UIViewController, NewsDetailsDisplayLogic , WKNavigationDelegate
{
    var interactor: NewsDetailsBusinessLogic?
    var router: (NSObjectProtocol & NewsDetailsRoutingLogic & NewsDetailsDataPassing)?
    
    var displayedNews : NewsDetails.FetchNewsDetails.ViewModel.DisplayNews?
    
    @IBOutlet var webView           : WKWebView!
    @IBOutlet var activityIndicator : UIActivityIndicatorView!
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = NewsDetailsInteractor()
        let presenter = NewsDetailsPresenter()
        let router = NewsDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getSelectedNewsDetails()
    }
    
    // MARK: Fetch News Details
    
    
    func getSelectedNewsDetails()
    {
        let request = NewsDetails.FetchNewsDetails.Request()
        interactor?.fetchNewsDetails(request: request)
    }
    
    
    //MARK: NewsDetailsDisplayLogic Delegates
    
    func displayNewsDetails(viewModel: NewsDetails.FetchNewsDetails.ViewModel)
    {
        self.title = viewModel.newsDetails.title
        let url = viewModel.newsDetails.url
        
        if let url = URL.init(string: url)
        {
            let request = URLRequest.init(url: url)
            webView.load(request)
            
        }
        else
        {
            displayError()
        }
        
    }
    
    func displayError()
    {
        
    }
    
    
    
}

extension NewsDetailsViewController
{
    
    func webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {
        self.activityIndicator.stopAnimating()
        self.activityIndicator.isHidden = true
        
        
    }
    
    func webView(_ webView: WKWebView, didStartProvisionalNavigation navigation: WKNavigation!) {
        // Set the indicator everytime webView started loading
        self.activityIndicator.isHidden = false
        self.activityIndicator.startAnimating()
    }
    
    func webView(_ webView: WKWebView, didFail navigation: WKNavigation!, withError error: Error) {
        self.activityIndicator.stopAnimating()
        self.activityIndicator.isHidden = true
        
    }
    
}

