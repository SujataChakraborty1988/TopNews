//
//  NewsListInteractor.swift
//  TopNews
//
//  Created by Sujata Chakraborty on 11/10/2019.
//  Copyright (c) 2019 Sujata Chakraborty. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsListBusinessLogic
{
    func fetchNewsList(request: NewsList.FetchNews.Request)
}

protocol NewsListDataStore
{
    var newsList : [News] { get  }

}

class NewsListInteractor: NewsListBusinessLogic, NewsListDataStore
{
    var presenter : NewsListPresentationLogic?
    var worker    : NewsListWorker? = NewsListWorker()
    var newsList  : [News] = [News]()
    
    
    // MARK: Fetch news
    
    func fetchNewsList(request: NewsList.FetchNews.Request)
    {
        weak var weakself = self
        
        worker?.fetchNewsList(url: "", pageSize: request.pageSize, pageNumber: request.pageNumber, completionHandler: { (article, error) in
            
            if let article = article , let articleList = article.articles
            {
                weakself?.newsList.append(contentsOf: articleList)
                
                if  articleList.count == 0
                {
                    let error = RBError.init(RBErrorCode: .EmptyData)
                    weakself?.presenter?.presentError(error: error)
                }
                else
                {
                    let response = NewsList.FetchNews.Response(news: weakself!.newsList)
                    weakself?.presenter?.presentNewsList(response: response)
                }
            }
            else
            {
                if let error = error
                {
                    weakself?.presenter?.presentError(error: error)
                    
                }
                else
                {
                    let error = RBError.init(RBErrorCode: .EmptyData)
                    weakself?.presenter?.presentError(error: error)
                }
            }
            
        })
        
        
    }
}
